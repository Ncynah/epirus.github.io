{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Epirus Blockchain Explorer \u00b6","title":"Epirus Blockchain Explorer"},{"location":"#epirus-blockchain-explorer","text":"","title":"Epirus Blockchain Explorer"},{"location":"metadata/","text":"Contract Metadata Registry \u00b6 Epirus' integrated smart contract registry allows you to upload Solidity metadata files, which enables Epirus to display the name of contracts deployed to the network and all decode the names of all events and parameters that are emitted in transactions. To use this functionality, you will need to generate a Solidity metadata file. Simply run solc --metadata when you compile your smart contract code to generate the file. The file you want to upload is typically called <ContractName>_meta.json . There are two places that you can upload the metadata, in the contract view page under Additional Details by clicking the Upload link next to Contract Metadata , or by heading to the Metadata Registry itself, which you can access by clicking on the person icon in the top right corner. From the registry you can view all of your contracts with associated metadata.","title":"Contract Metadata Registry"},{"location":"metadata/#contract-metadata-registry","text":"Epirus' integrated smart contract registry allows you to upload Solidity metadata files, which enables Epirus to display the name of contracts deployed to the network and all decode the names of all events and parameters that are emitted in transactions. To use this functionality, you will need to generate a Solidity metadata file. Simply run solc --metadata when you compile your smart contract code to generate the file. The file you want to upload is typically called <ContractName>_meta.json . There are two places that you can upload the metadata, in the contract view page under Additional Details by clicking the Upload link next to Contract Metadata , or by heading to the Metadata Registry itself, which you can access by clicking on the person icon in the top right corner. From the registry you can view all of your contracts with associated metadata.","title":"Contract Metadata Registry"},{"location":"tagging/","text":"Address Tagging \u00b6 At Web3 Labs we're trying to eliminate all sources of complexity in the blockchain. Hexadecimal contract addresses are one such challenge. Now in Epirus, if you have a contract you'd like to give a human readable name, you can simply tag it with an alternate identifier. When you're viewing a contract, if you hover over the ellipses ( ... ) to the right of the address, you are given the option to add a tag. Enter a name for the contract address in the text box. And no more hex address is shown for the contract! Don't worry, you can still easily access the contract address if you need to.","title":"Address Tagging"},{"location":"tagging/#address-tagging","text":"At Web3 Labs we're trying to eliminate all sources of complexity in the blockchain. Hexadecimal contract addresses are one such challenge. Now in Epirus, if you have a contract you'd like to give a human readable name, you can simply tag it with an alternate identifier. When you're viewing a contract, if you hover over the ellipses ( ... ) to the right of the address, you are given the option to add a tag. Enter a name for the contract address in the text box. And no more hex address is shown for the contract! Don't worry, you can still easily access the contract address if you need to.","title":"Address Tagging"}]}